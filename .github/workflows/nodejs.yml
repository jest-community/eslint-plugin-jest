name: Unit tests & Release

on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next

jobs:
  prepare-yarn-cache-ubuntu:
    uses: ./.github/workflows/prepare-cache.yml
    with:
      os: ubuntu-latest
  prepare-yarn-cache-macos:
    uses: ./.github/workflows/prepare-cache.yml
    with:
      os: macos-latest
  prepare-yarn-cache-windows:
    uses: ./.github/workflows/prepare-cache.yml
    with:
      os: windows-latest

  prettier:
    needs: prepare-yarn-cache-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn
      - name: run prettier
        run: yarn prettier:check

  typecheck:
    needs: prepare-yarn-cache-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn
      - name: run typecheck
        run: yarn typecheck

  test-node:
    name:
      # prettier-ignore
      Test on Node.js v${{ matrix.node-version }}, eslint v${{ matrix.eslint-version }}
    needs: prepare-yarn-cache-ubuntu
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x, 14.x, 16.x, 17.x, 18.x]
        eslint-version: [6, 7, 8]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name:
          # prettier-ignore
          install with eslint v${{ matrix.eslint-version }}
        run: |
          yarn
          yarn add --dev eslint@${{ matrix.eslint-version }}
      - name: run tests
        # only collect coverage on eslint versions that support dynamic import
        run: yarn test --coverage ${{ matrix.eslint-version >= 8 }}
        env:
          CI: true
      - uses: codecov/codecov-action@v3
        if: ${{ matrix.eslint-version >= 8 }}
  test-ubuntu:
    uses: ./.github/workflows/test.yml
    needs: prepare-yarn-cache-ubuntu
    with:
      os: ubuntu-latest
  test-macos:
    uses: ./.github/workflows/test.yml
    needs: prepare-yarn-cache-macos
    with:
      os: macos-latest
  test-windows:
    uses: ./.github/workflows/test.yml
    needs: prepare-yarn-cache-windows
    with:
      os: windows-latest

  docs:
    if: ${{ github.event_name == 'pull_request' }}
    needs: prepare-yarn-cache-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn
      - name: regenerate docs
        run: yarn tools:regenerate-docs
      - name: report regenerated docs
        run: |
          git diff --name-only \
            | xargs -I '{}' bash -c \
              'echo "::error file={}::This needs to be regenerated by running \`tools:regenerate-docs\`" && false'

  release:
    if:
      # prettier-ignore
      ${{ github.event_name == 'push' && (github.event.ref == 'refs/heads/main' || github.event.ref == 'refs/heads/next') }}
    name: Release new version
    needs:
      [prettier, typecheck, test-node, test-ubuntu, test-macos, test-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn
      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
